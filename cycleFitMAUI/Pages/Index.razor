@page "/"
@using cycleFitMAUI.Shared.Components
@using cycleFitMAUI.Data
@using System.Text.Json


<h1 class="text-3xl font-bold">Hello, World 🌎!</h1>

<p class="mb-4 text-xl">This is an app that helps you create <strong>.FIT</strong> files to be imported into various cycling training apps 🚴🏻‍♂️</p>

<p class="text-xl">Enter your max heart rate so that your heart rate zones can be calculated or fill them out manually 🫀</p>
<p class="mb-2 text-xl"> Alternatively you can enter your age and you'll recieve estimated heart rate zones :)</p>

<ErrorBoundary @ref="HeartRateErr">
    <ChildContent>
        <UserInfo />
    </ChildContent>
    <ErrorContent>
        <div class="flex flex-row gap-8 my-6">
            <p class="static rounded text-white bg-red-500 text-semibold p-3 text-2xl">
                Only fill out age <strong>or</strong> max heart rate. Not both.
            </p>
            <button class="text-2xl px-4 hover:text-green-200 bg-gray-400 text-white rounded-md border-2 border-gray-600" @onclick="RecoverHRError">Try again</button>
        </div>
    </ErrorContent>
</ErrorBoundary>

<label for="editTable" class="text-xl mb-2  ">
    Manually Edit Heart Rate Zones Table
    <input @onclick="RemoveReadOnlyAttributes" name="editTable" type="checkbox" class="text-xl" />
</label>

<div class="border border-gray-400 p-2">
    <table class="table-auto w-full">
        <thead>
            <tr>
                <th class="border px-4 py-2 font-bold">
                    Zone
                </th>
                <th class="border px-4 py-2 font-bold">
                    Heart Rate Low
                </th>
                <th class="border px-4 py-2 font-bold">
                    Heart Rate High
                </th>
            </tr>
        </thead>
        <tbody>
            <tr class="border">
                <td class="border px-4 py-2">
                    1
                </td>
                <td class="border px-4 py-2">
                    <input class="w-full" readonly name="HR" type="number" />
                </td>
                <td class="border px-4 py-2">
                    <input class="w-full" readonly name="HR" type="number" />
                </td>
            </tr>
            <tr class="border">
                <td class="border px-4 py-2">
                    2
                </td>
                <td class="border px-4 py-2">
                    <input class="w-full" readonly name="HR" type="number" />
                </td>
                <td class="border px-4 py-2">
                    <input class="w-full" readonly name="HR" type="number" />
                </td>
            </tr>
            <tr class="border">
                <td class="border px-4 py-2">
                    3
                </td>
                <td class="border px-4 py-2">
                    <input class="w-full" readonly name="HR" type="number" />
                </td>
                <td class="border px-4 py-2">
                    <input class="w-full" readonly name="HR" type="number" />
                </td>
            </tr>
            <tr class="border">
                <td class="border px-4 py-2">
                    4
                </td>
                <td class="border px-4 py-2">
                    <input class="w-full" readonly name="HR" type="number" />
                </td>
                <td class="border px-4 py-2">
                    <input value="UserHRZoneswah" class="w-full" readonly name="HR" type="number" />
                </td>
            </tr>
            <tr class="border">
                <td class="border px-4 py-2">
                    5
                </td>
                <td class="border px-4 py-2">
                    <input class="w-full" readonly name="HR" type="number" />
                </td>
                <td class="border px-4 py-2">
                    <input class="w-full" readonly name="HR" type="number" />
                </td>
            </tr>
        </tbody>
    </table>
</div>

<button @onclick="SaveHRData" class="text-2xl w-full border rounded-md bg-purple-500 text-white p-2" type="button">Save HR Zones</button>

@code {
#nullable enable
    public bool hasHRData = Preferences.Default.ContainsKey("HRData");

        protected override async Task OnAfterRenderAsync(bool firstRender)
        {
            if (firstRender) {
                if (hasHRData == false) return;
                // Otherwise we need to deserialize the JSON and then create an instance of the HeartRateZones class to pull in information and fill out the chart.
                // Going to need another dom function for that to locate each input with name HR and fill in in the correct order
                string HRData = Preferences.Default.Get("HRData", "");
                HeartRateZones? UserHRZones = JsonSerializer.Deserialize<HeartRateZones>(HRData);

                await jsRuntime.InvokeVoidAsync("domHelper.addHeartRateData", UserHRZones);
            }
        }

        private ErrorBoundary? HeartRateErr;

        protected void RecoverHRError()
        {
            HeartRateErr?.Recover();
        }

        private async Task RemoveReadOnlyAttributes()
        {
            await jsRuntime.InvokeVoidAsync("domHelper.removeReadOnlyAttribute");
        }

        private async Task SaveHRData()
        {
            string HRData = await jsRuntime.InvokeAsync<string>("domHelper.getHRData");
            Preferences.Default.Set("HRData", HRData);
        }

        [Inject]
        private IJSRuntime jsRuntime { get; set; }
    }